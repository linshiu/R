install.packages("ggplot2")
install.packages("grid")
install.packages("gridExtra")
install.packages("XLConnect")
install.packages("corrplot")
install.packages("Hmisc")
y = c(2,6,7,9,10)
x = matrix( c(1,1,1,1,1,1,2,3,4,5),ncol=2,byrow=T)
x
x = matrix( c(1,1,1,1,1,1,2,3,4,5),ncol=2,byrow=F)
x
x
t(x)*x
t(x)%*%x
t(x)
solve(t(x)%*%x)
det(t(x)%*%x)
55*5-15*5
55*5-15*15
x
t(x)*y
t(x)
x
t(x)%*%y
solve(t(x)%*%y)%*%t(x)*y
solve(t(x)%*%x)%*%t(x)*y
(t(x)%*%y
t(x)%*%x
solve(t(x)%*%x)%*%t(x)%*%y
library(tm)
install.packages("tm")
library(tm)
a = scan_tokenizer(text)
text = "Today is nice outside. This is actuall not true."
a = scan_tokenizer(text)
a
text1 = "My favorite space is the Garage. There is plenty of room there."
in = c(text,text1)
input = c(text,text1)
input
c = Corpus(vecotrSource(input))
c = Corpus(vectorSource(input))
c = Corpus(vectorSource(input))
corpus = ‚ÄêCorpus(VectorSource(input))
corpus = Corpus(VectorSource(input))
corpus
insepct(corpus)
inspect(corpus)
corpus< tm_map(corpus,removePunctuation
)
# My PC
main = "C:/Users/Steven/Documents/Academics/3_Graduate School/2014-2015 ~ NU/"
# Aginity
#main = "\\\\nas1/labuser169"
course = "MSIA_400_Statistical Methods for Data Mining"
datafolder = "Data/Lab/10_27"
setwd(file.path(main,course, datafolder))
# My PC
main = "C:/Users/Steven/Documents/Academics/3_Graduate School/2014-2015 ~ NU/"
# Aginity
#main = "\\\\nas1/labuser169"
course = "MSIA_400_Analytics for Competitive Advantage"
datafolder = "Data/Lab/10_27"
setwd(file.path(main,course, datafolder))
filename = 'whitewine.txt'
wine <-read.delim(filename);
y = wine[,1];
x = wine[,2:length(wine[1,])];
getwd()
# My PC
main = "C:/Users/Steven/Documents/Academics/3_Graduate School/2014-2015 ~ NU/"
# Aginity
#main = "\\\\nas1/labuser169"
course = "MSIA_400_Analytics for Competitive Advantage"
datafolder = "Data/Lab/10_27"
setwd(file.path(main,course, datafolder))
# My PC
main = "C:/Users/Steven/Documents/Academics/3_Graduate School/2014-2015 ~ NU/"
# Aginity
#main = "\\\\nas1/labuser169"
course = "MSIA_400_Analytics for Competitive Advantage"
datafolder = "Lab/10_27"
setwd(file.path(main,course, datafolder))
filename = 'whitewine.txt'
wine <-read.delim(filename);
y = wine[,1];
x = wine[,2:length(wine[1,])];
library(MASS)
reg= lm(y~., data=x)
reg.step= stepAIC(object=reg, direction="both")
summary(reg.step)
summary(reg.step)
formula(reg.step); # print the formula of the model
AIC(reg.step); # print AIC value of the model
summary(reg.step)$r.squared; # print r^2value of the model
summary(reg. step)$adj.r.squared; # print adjusted r^2value
e = resid(reg.step); # define residuals
SSE = sum(e^2); # calculate Sum of Squared errors
SAE = sum(abs(e)); # calculate Sum of Absolute errors
summary(reg.step)$adj.r.squared; # print adjusted r^2value
library(leaps)
reg.exh= regsubsets(x,y, nbest=1, nvmax=length(y), method="exhaustive");
summary(reg.exh)
summary(reg.exh)$which
summary(reg.exh)$cp
summary(reg.exh)$adjr2
summary(reg.exh)
names(reg.exh)
names(summary(reg.exh))
cbind(summary(reg.exh)$which, summary(reg.exh)$cp, summary(reg.exh)$adjr2)
leaps(x,y,nbest=1,method="Cp")
leaps(x,y,nbest=1,method="adjr2")
# Piecewise Regression ####
filename = "height2.txt"
height2 <-read.delim(filename);
mht= height2[,1];
reg.seg= lm(fht~ (mht<1.73)*mht)
height2 <-read.delim(filename);
mht= height2[,1];
fht= height2[,2];
reg.seg= lm(fht~ (mht<1.73)*mht)
library(segmented)
reg.ht = lm(fht~ mht)
reg.seg1 = segmented(reg.ht, seg.Z= ~mht, psi=1.73)
install.packages("segmented")
library(segmented)
reg.ht = lm(fht~ mht)
reg.seg1 = segmented(reg.ht, seg.Z= ~mht, psi=1.73)
plot(ht)
plot(reg.seg1, add=T)
reg.ht = lm(fht~ mht)
reg.seg1 = segmented(reg.ht, seg.Z= ~mht, psi=1.73)
reg.seg2 = segmented(reg.ht, seg.Z= ~mht, psi=c(1.65,1.73))
plot(reg.ht)
plot(height2)
plot(reg.seg1, add=T)
plot(height2)
abline(coef(reg.ht))
summary(reg.seg2)
reg.ht = lm(fht~ mht)
reg.seg1 = segmented(reg.ht, seg.Z= ~mht, psi=1.73)
reg.seg2 = segmented(reg.ht, seg.Z= ~mht, psi=c(1.65,1.73))
reg.seg2 = segmented(reg.ht, seg.Z= ~mht, psi=c(1.65,1.73))
summary(reg.set1)
summary(reg.seg1)
library(segmented)
reg.ht = lm(fht~ mht)
reg.seg1 = segmented(reg.ht, seg.Z= ~mht, psi=1.73)
reg.seg= lm(fht~ (mht<1.73)*mht)
summary(reg.seg)
summary(reg.seg1)
